swagger: '2.0'
info:
  version: 0.0.1
  title: Thermostat Web Gateway JVM Information API
  license:
    name: GPL v2 with Classpath Exception
    url: 'http://www.gnu.org/licenses'
consumes:
  - application/json
produces:
  - application/json
  - text/html; charset=utf-8
basePath: /jvms/0.0.1
paths:
  '/update/systems/{systemId}/ts/{timeStamp}':
    parameters:
      - $ref: '#/parameters/system-id'
      - $ref: '#/parameters/timestamp'
    put:
      description: 'Set last updated for jvm information to {timeStamp}'
      responses:
        '200':
          description: OK
      parameters:
      - $ref: "#/parameters/put-body-jvms-update"
  '/systems/{systemId}':
    parameters:
      - $ref: '#/parameters/system-id'
    get:
      description: 'Get jvms for system {systemId}'
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/include'
        - $ref: '#/parameters/exclude'
        - $ref: '#/parameters/query'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jvm-infos'
    post:
      description: 'Add jvms for system {systemId}'
      parameters:
        - $ref: '#/parameters/jvm-infos'
      responses:
        '200':
          description: OK
    delete:
      description: 'Delete all jvms on system {systemId}'
      responses:
        '200':
          description: OK
  '/tree':
    get:
      description: Get jvm information organized by systemId
      parameters:
        - $ref: '#/parameters/alive-only'
        - $ref: '#/parameters/include'
        - $ref: '#/parameters/exclude'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'        
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jvm-list-response'
  '/systems/{systemId}/jvms/{jvmId}':
    parameters:
    - $ref: '#/parameters/system-id'
    - $ref: '#/parameters/jvm-id'
    get:
      description: 'Get information for the JVM with id {jvmId} running on system {systemId}'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jvm-info'
    put:
      description: 'Update the JVM with id {jvmId} running on system {systemId}'
      responses:
        '200':
          description: OK
      parameters:
      - $ref: "#/parameters/put-body-jvm"
    delete:
      description: 'Delete the JVM with id {jvmId} running on system {systemId}'
      responses:
        '200':
          description: OK
definitions:
  jvm-infos:
    type: array
    items:
      $ref: '#/definitions/jvm-info'
  jvm-info:
    type: object
    properties:
      agentId:
        type: string
      jvmId:
        type: string
      mainClass:
        type: string
      startTime:
        type: integer
        format: int64
      endTime:
        type: integer
        format: int64
      jvmPid:
        type: integer
      javaVersion:
        type: string
      javaHome:
        type: string
      javaCommandLine:
        type: string
      jvmArguments:
        type: string
      jvmName:
        type: string
      jvmInfo:
        type: string
      jvmVersion:
        type: string
      classpath:
        type: string
      environment:
        type: array
        items:
          $ref: '#/definitions/environment-items'
      uid:
        type: integer
        format: int64
      username:
        type: string
      last_updated:
        type: integer
        format: int64
  environment-items:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  put-body:
    type: object
    properties:
      set:
        type: object
  jvm-list-response:
    type: object
    properties:
      response:
        type: array
        items:
          $ref: '#/definitions/jvm-listing'
  jvm-listing:
    type: object
    properties:
      systemId:
        type: string
      jvms:
        type: array
        items:
          $ref: '#/definitions/jvm-info'
  put-body-last_updated:
    type: array
    items:
      type: string
parameters:
  system-id:
    name: systemId
    in: path
    required: true
    type: string
    description: The system ID for the jvms
  jvm-id:
    name: jvmId
    in: path
    required: true
    type: string
    description: The ID of the jvm
  timestamp:
    name: timeStamp
    in: path
    required: true
    type: string
    description: The timestamp to set the last_updated field for.
  jvm-infos:
    name: jvm-infos
    in: body
    description: The jvm information
    required: true
    schema:
      $ref: '#/definitions/jvm-infos'
  put-body-jvm:
    name: body
    in: body
    description: >-
      The JSON object containing a 'set' object. This contains single item JSON 
      objects that specify the field to replace and the JSON value to replace with.
      Must not include 'systemId' and 'jvmId' fields. Example { "set" : {
      "field" : "value", "field2":{"object":"item"} }
    required: true
    schema:
      $ref: '#/definitions/put-body'
  put-body-jvms-update:
    name: body
    in: body
    description: >-
      An array of jvmIds for which to update the last_updated field.
    required: true
    schema:
      $ref: '#/definitions/put-body-last_updated'
  limit:
    name: limit
    in: query
    description: Limit of items to return. Example '1'
    type: integer
  offset:
    name: offset
    in: query
    description: Offset of items to return. Example '0'
    type: integer
  sort:
    name: sort
    in: query
    description: >-
      Sort string. Comma separated list of fields prefixed with '+' for
      ascending or '-' for descending. Example '?s=+a,-b' Fields use dot
      notation for embedded documents. Example 'outer.inner' refers to field
      inner contained in field outer.
    type: string
  query:
    name: query
    in: query
    description: >-
      Query string. Comma separated list of key, comparator, value pairs.
      Comparator supports '==', '<=', '>=', '<', '>', '!='. Example
      '?q=a==b,c!=d'. Keys are fields in documents and use dot notation for
      embedded documents. Example 'outer.inner' refers to field inner contained
      in field outer.
    type: string
  include:
    name: include
    in: query
    description: >-
      Inclusion string. Comma separated list of fields to include in the
      response. Example '?include=a,b' Fields use dot notation for embedded
      documents. Example 'outer.inner' refers to field inner contained in field
      outer. Cannot be used in combination with 'exclude' parameter Overriden by
      'exclude' parameter
    type: string
  exclude:
    name: exclude
    in: query
    description: >-
      Exclusion string. Comma separated list of fields to exclude in the
      response. Example '?exclude=a,b' Fields use dot notation for embedded
      documents. Example 'outer.inner' refers to field inner contained in field
      outer. Cannot be used in combination with 'include' parameter; takes
      precedence over 'include' parameter
    type: string
  alive-only:
    name: aliveOnly
    in: query
    description: Whether or not to return only JVMs that are live
    type: boolean
    default: true
    required: false

